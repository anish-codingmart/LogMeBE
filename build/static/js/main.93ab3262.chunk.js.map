{"version":3,"sources":["logo.svg","components/sidebar/sidebar.jsx","components/admin-dashboard/main-container-admin-dashboard.jsx","components/navbar/navbar.jsx","components/admin-dashboard/admin-dashboard.jsx","components/admin-dashboard/discover-page.jsx","components/admin-dashboard/components/alert-system.jsx","components/admin-dashboard/settings-page.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Sidebar","state","react_default","a","createElement","className","Link","to","Component","MainContainer","props","_this$state","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","response","endpoint","hits","hitsCount","totalHits","ticketsCount","lastWeekTotalHits","lastWeekBookingCount","lastWeekScheduleCount","lastWeekTicketsCount","liveStatus","agentData","datasets","data","labels","urlData","actionTypeData","startDate","moment","endDate","defineProperty","fetchQuery","pie","setState","backgroundColor","clearArray","refreshData","_this2","setInterval","_this3","splice","console","log","_this4","setTimeout","_this5","startOf","format","endOf","query","bool","filter","range","timestamp","gte","lte","aggs","spiderBotCount","terms","field","urlCount","actionTypeCount","getLastWeeKLogs","axios","post","then","agents","aggregations","buckets","url","actionType","agentCount","agentLabels","map","doc","push","doc_count","key","actionTypeLabels","urlLabels","scheduleCount","bookingCount","total","getChartData","_this6","subtract","lastWeekStartDate","lastWeekEndDate","_this7","options","annotation","annotations","drawTime","borderColor","borderDash","borderWidth","mode","type","value","scaleID","maintainAspectRation","onClick","goLive","react_dates","startDateId","endDateId","onDatesChange","_ref","focusedInput","onFocusChange","isOutsideRange","minimumNights","displayFormat","goToDate","class","es","width","height","Navbar","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Discover","onUpdateSearch","bind","assertThisInitialized","event","apiURL","target","get","length","name","placeholder","onChange","item","_id","_source","client","agent","method","request","AlertSystem","submitOK","formErrors","fieldTypesList","fieldTypeName","fieldTypeValue","fieldNames","fieldName","fieldValue","alertOperators","operatorName","operatorValue","alertRange","rangeName","rangeMetric","newAlert","alertEmailAddressArray","email","alertMobileNumberArray","mobile","alertMobileNumberFlag","alertName","alertFrequency","alertFieldType","alertFieldName","alertOperator","alertThresholdLimit","alertRangeValue","alertRangeMetric","alertState","alertRules","handleChange","handleShareholderNameChange","idx","evt","shareholder","sidx","objectSpread","handleRemoveShareholder","s","handleShareholderNameChangeNumber","handleRemoveShareholderNumber","formValidation","threshold","forEach","element","isNaN","getAlertRules","setFieldNames","handleFieldTypeChange","fieldTypeObj","find","x","concat","flag","parseInt","clearFields","Swal","fire","alert","obj","alertUid","title","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","_React$createElement","_React$createElement2","_React$createElement3","_React$createElement4","scope","updateAlertState","deleteAlertState","for","operator","emailAddress","handleAddShareholder","react_switch_default","handleMobileNumberFlag","checked","style","display","mobileNumber","handleAddShareholderNumber","error","addNewAlert","Settings","getSettingsData","alertEmailAddress","logsThresholdCount","alertToast","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","alert_system","App","socketIOClient","on","warn","navbar","BrowserRouter","sidebar","Switch","Route","exact","path","component","react_toastify_lib","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.93ab3262.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Sidebar extends Component {\n  state = {};\n  render() {\n    return (\n      <div className=\"sidebar-container text-left\">\n        <Link className=\"route-links\" to=\"/admin\">\n          <p className=\"sidebar-link\">Visualize</p>\n        </Link>\n        <Link className=\"route-links\" to=\"/discover\">\n          <p className=\"sidebar-link\">Discover</p>\n        </Link>\n        <Link className=\"route-links\" to=\"/settings\">\n          <p className=\"sidebar-link\">Settings</p>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Pie, Bar, Polar } from \"react-chartjs-2\";\nimport socketIOClient from \"socket.io-client\";\nimport { DateRangePicker } from \"react-dates\";\nimport moment from \"moment\";\n\nclass MainContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      response: false,\n      endpoint: \"http://127.0.0.1:4001\",\n      hits: [],\n      hitsCount: 0,\n      totalHits: 0,\n      ticketsCount: 0,\n      lastWeekTotalHits: 0,\n      lastWeekBookingCount: 0,\n      lastWeekScheduleCount: 0,\n      lastWeekTicketsCount: 0,\n      liveStatus: false,\n      agentData: { datasets: [{ data: [] }], labels: [] },\n      urlData: { datasets: [{ data: [] }], labels: [] },\n      actionTypeData: { datasets: [{ data: [] }], labels: [] },\n      startDate: moment(\"2018-12-10\"),\n      endDate: moment(\"2018-12-18\"),\n      response: [],\n      refreshData: false\n    };\n  }\n\n  componentDidMount() {\n    const { endpoint } = this.state;\n    // const socket = socketIOClient(endpoint);\n    this.fetchQuery();\n    // socket.on(\"FromAPI\", data => {\n    //   this.setState({ response: [...this.state.response, data] });\n    // });\n\n    let pie = [1, 2, 3, 4, 5];\n    this.setState({\n      agentData: {\n        datasets: [\n          {\n            data: pie,\n            backgroundColor: [\n              \"#e74c3c\",\n              \"#2980b9\",\n              \"#f1c40f\",\n              \"#8e44ad\",\n              \"#2c3e50\"\n            ]\n          }\n        ],\n        labels: []\n      },\n      urlData: {\n        datasets: [\n          {\n            data: pie,\n            backgroundColor: [\n              \"#e74c3c\",\n              \"#2980b9\",\n              \"#f1c40f\",\n              \"#8e44ad\",\n              \"#2c3e50\"\n            ]\n          }\n        ],\n        labels: []\n      },\n      actionTypeData: {\n        datasets: [\n          {\n            data: pie,\n            backgroundColor: [\n              \"#e74c3c\",\n              \"#2980b9\",\n              \"#f1c40f\",\n              \"#8e44ad\",\n              \"#2c3e50\"\n            ]\n          }\n        ],\n        labels: []\n      }\n    });\n    this.clearArray();\n    this.refreshData();\n    // console.log(this.state);\n  }\n\n  refreshData() {\n    setInterval(() => {\n      if (this.state.refreshData) this.fetchQuery();\n    }, 1000);\n  }\n\n  clearArray() {\n    setInterval(() => {\n      this.state.response.splice(0, 20);\n    }, 30000);\n  }\n\n  goToDate() {\n    console.log(\"New Date\");\n    // const startDate = moment(this.state.startDate).startOf(\"day\");\n    // const endDate = moment(this.state.endDate).endOf(\"day\");\n\n    // this.setState({\n    //   startDate: startDate,\n    //   endDate: endDate\n    // });\n    this.fetchQuery();\n  }\n\n  goLive() {\n    if (this.state.liveStatus) {\n      console.log(\"No Live\");\n      this.setState({ liveStatus: false, refreshData: false });\n    } else {\n      console.log(\"Going Live\");\n      this.setState({\n        liveStatus: true,\n        startDate: moment(),\n        endDate: moment(),\n        refreshData: true\n      });\n      setTimeout(() => {\n        this.fetchQuery();\n      }, 300);\n    }\n  }\n\n  fetchQuery() {\n    let startDate = moment(this.state.startDate)\n      .startOf(\"day\")\n      .format();\n    let endDate = moment(this.state.endDate)\n      .endOf(\"\")\n      .format();\n    console.log(startDate, endDate);\n    const apiURL = \"http://localhost:9200/logsindexnew/_search\";\n    const query = {\n      query: {\n        bool: {\n          filter: [\n            {\n              range: {\n                timestamp: {\n                  gte: startDate,\n                  lte: endDate\n                }\n              }\n            }\n          ]\n        }\n      },\n      aggs: {\n        spiderBotCount: {\n          terms: {\n            field: \"spiderBot\"\n          }\n        },\n        urlCount: {\n          terms: {\n            field: \"type\"\n          }\n        },\n        actionTypeCount: {\n          terms: {\n            field: \"actionType\"\n          }\n        }\n      }\n    };\n\n    this.getLastWeeKLogs();\n    axios.post(apiURL, query).then(response => {\n      console.log(response);\n      let agents = response.data.aggregations.spiderBotCount.buckets;\n      let url = response.data.aggregations.urlCount.buckets;\n      let actionType = response.data.aggregations.actionTypeCount.buckets;\n      console.log(actionType);\n      // console.log(agents);\n      let agentCount = [];\n      let agentLabels = [];\n      agents.map(doc => {\n        agentCount.push(doc.doc_count);\n        agentLabels.push(doc.key);\n      });\n\n      // Action Type for Chart\n      let actionTypeCount = [];\n      let actionTypeLabels = [];\n      actionType.map(doc => {\n        actionTypeCount.push(doc.doc_count);\n        actionTypeLabels.push(doc.key);\n      });\n      console.log(actionTypeLabels);\n      let urlCount = [];\n      let urlLabels = [];\n      let scheduleCount = 0;\n      let bookingCount = 0;\n      url.map(doc => {\n        if (doc.key == \"schedule\") {\n          scheduleCount = doc.doc_count;\n        }\n        if (doc.key == \"booking\") {\n          bookingCount = doc.doc_count;\n        }\n        urlCount.push(doc.doc_count);\n        urlLabels.push(doc.key);\n      });\n\n      let totalHits = response.data.hits.total;\n      this.setState({\n        totalHits: totalHits,\n        scheduleCount: scheduleCount,\n        bookingCount: bookingCount\n      });\n      // console.log(agentCount, agentLabels);\n      this.getChartData(\n        agentCount,\n        agentLabels,\n        urlCount,\n        urlLabels,\n        actionTypeCount,\n        actionTypeLabels\n      );\n    });\n  }\n\n  getLastWeeKLogs() {\n    let startDate = moment()\n      .subtract(1, \"weeks\")\n      .startOf(\"week\")\n      .startOf(\"day\")\n      .format();\n    let endDate = moment()\n      .subtract(1, \"weeks\")\n      .endOf(\"week\")\n      .endOf(\"day\")\n      .format();\n    console.log(startDate, endDate);\n    this.setState({\n      lastWeekStartDate: startDate,\n      lastWeekEndDate: endDate\n    });\n    const apiURL = \"http://localhost:9200/logsindexnew/_search\";\n    const query = {\n      query: {\n        bool: {\n          filter: [\n            {\n              range: {\n                timestamp: {\n                  gte: startDate,\n                  lte: endDate\n                }\n              }\n            }\n          ]\n        }\n      },\n      aggs: {\n        spiderBotCount: {\n          terms: {\n            field: \"spiderBot\"\n          }\n        },\n        urlCount: {\n          terms: {\n            field: \"type\"\n          }\n        },\n        actionTypeCount: {\n          terms: {\n            field: \"actionType\"\n          }\n        }\n      }\n    };\n    axios.post(apiURL, query).then(response => {\n      const lastWeekTotalHits = response.data.hits.total;\n      let url = response.data.aggregations.urlCount.buckets;\n      let scheduleCount = 0,\n        bookingCount = 0,\n        ticketsCount = 0;\n      url.map(doc => {\n        if (doc.key == \"schedule\") {\n          scheduleCount = doc.doc_count;\n        }\n        if (doc.key == \"booking\") {\n          bookingCount = doc.doc_count;\n        }\n        if (doc.key == \"tickets\") {\n          ticketsCount = doc.doc_count;\n        }\n      });\n      this.setState({\n        lastWeekTotalHits: lastWeekTotalHits,\n        lastWeekScheduleCount: scheduleCount,\n        lastWeekBookingCount: bookingCount,\n        lastWeekTicketsCount: ticketsCount\n      });\n    });\n  }\n\n  getChartData(\n    agentCount,\n    agentLabels,\n    urlCount,\n    urlLabels,\n    actionTypeCount,\n    actionTypeLabels\n  ) {\n    this.setState({\n      agentData: {\n        datasets: [\n          {\n            data: agentCount\n          }\n        ],\n        labels: agentLabels\n      },\n      urlData: {\n        datasets: [\n          {\n            data: urlCount\n          }\n        ],\n        labels: urlLabels\n      },\n      actionTypeData: {\n        datasets: [\n          {\n            data: actionTypeCount\n          }\n        ],\n        labels: actionTypeLabels\n      }\n    });\n    // console.log(this.state);\n  }\n\n  render() {\n    const options = {\n      annotation: {\n        annotations: [\n          {\n            drawTime: \"afterDatasetsDraw\",\n            borderColor: \"red\",\n            borderDash: [2, 2],\n            borderWidth: 2,\n            mode: \"vertical\",\n            type: \"line\",\n            value: 10,\n            scaleID: \"x-axis-0\"\n          }\n        ]\n      },\n      maintainAspectRation: false\n    };\n\n    return (\n      <div className=\"main-admin-container container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-12 stat-section\">\n            <div className=\"date-picker d-flex align-items-center justify-content-between\">\n              <h3 className=\"text-left\">Dashboard</h3>\n              <div className=\"date-picker\">\n                <button\n                  type=\"button\"\n                  onClick={() => this.goLive()}\n                  className={\n                    \"btn margin-right \" +\n                    (this.state.liveStatus ? \" btn-danger\" : \"btn-secondary\")\n                  }\n                >\n                  Live\n                </button>\n\n                <DateRangePicker\n                  startDate={this.state.startDate} // momentPropTypes.momentObj or null,\n                  startDateId=\"your_unique_start_date_id\" // PropTypes.string.isRequired,\n                  endDate={this.state.endDate} // momentPropTypes.momentObj or null,\n                  endDateId=\"your_unique_end_date_id\" // PropTypes.string.isRequired,\n                  onDatesChange={({ startDate, endDate }) =>\n                    this.setState({ startDate, endDate })\n                  }\n                  // PropTypes.func.isRequired,\n                  focusedInput={this.state.focusedInput} // PropTypes.oneOf([START_DATE, END_DATE]) or null,\n                  onFocusChange={focusedInput =>\n                    this.setState({ focusedInput })\n                  } // PropTypes.func.isRequired,\n                  isOutsideRange={() => false}\n                  minimumNights={0}\n                  displayFormat={() => \"DD/MM/YYYY\"}\n                />\n                <button\n                  type=\"button\"\n                  onClick={() => this.goToDate()}\n                  class=\"btn btn-primary margin-left\"\n                >\n                  Go\n                </button>\n              </div>\n            </div>\n            <hr />\n            <h4 className=\"text-left\">Live Counter</h4>\n\n            <div className=\"row d-flex justify-content-center\">\n              <div className=\"col-md-2 live-counter-box bg-blue\">\n                <span>Total Logs</span>\n                <h4>{this.state.totalHits}</h4>\n              </div>\n\n              <div className=\"col-md-2 live-counter-box bg-red\">\n                <span>Schedule Count</span>\n                <h4>{this.state.scheduleCount}</h4>\n              </div>\n\n              <div className=\"col-md-2 live-counter-box bg-orange\">\n                <span>Booking Count</span>\n                <h4>{this.state.bookingCount}</h4>\n              </div>\n              <div className=\"col-md-2 live-counter-box bg-green\">\n                <span>Tickets Count</span>\n                <h4>{this.state.ticketsCount}</h4>\n              </div>\n              <div className=\"col-md-10\">\n                <hr />\n                <h5 className=\"text-center\">\n                  Last Week{\" \"}\n                  <span className=\"text-x-small\">\n                    (\n                    {moment(this.state.lastWeekStartDate).format(\"DD MMM YYYY\")}{\" \"}\n                    - {moment(this.state.lastWeekEndDate).format(\"DD MMM YYYY\")}\n                    )\n                  </span>\n                </h5>\n              </div>\n\n              <div className=\"col-md-2 live-counter-box bg-grey\">\n                <span>Last Week Logs</span>\n                <h4>{this.state.lastWeekTotalHits}</h4>\n              </div>\n              <div className=\"col-md-2 live-counter-box bg-purple\">\n                <span>Booking Count</span>\n                <h4>{this.state.lastWeekBookingCount}</h4>\n              </div>\n              <div className=\"col-md-2 live-counter-box bg-turquoise\">\n                <span>Schedule Count</span>\n                <h4>{this.state.lastWeekScheduleCount}</h4>\n              </div>\n              <div className=\"col-md-2 live-counter-box bg-komaru\">\n                <span>Tickets Count</span>\n                <h4>{this.state.lastWeekTicketsCount}</h4>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-12 stat-section\">\n            <hr />\n            <h4 className=\"text-left\">Visualize - Chart</h4>\n            <div className=\"row\">\n              <div className=\"col-md-4 stat-section \">\n                <h5>Spider Bot Stats</h5>\n                <br />\n                <Pie\n                  data={this.state.agentData}\n                  width={250}\n                  height={250}\n                  options={options}\n                />\n              </div>\n              <div className=\"col-md-4 stat-section \">\n                <h5>URL Route Stats</h5>\n                <br />\n                <Bar\n                  data={this.state.urlData}\n                  width={250}\n                  height={250}\n                  options={options}\n                />\n              </div>\n              <div className=\"col-md-4 stat-section \">\n                <h5>Action Type Stats</h5>\n                <br />\n                <Pie\n                  data={this.state.actionTypeData}\n                  width={250}\n                  height={250}\n                  options={options}\n                />\n              </div>\n            </div>\n          </div>\n          <br />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MainContainer;\n","import React, { Component } from \"react\";\nclass Navbar extends Component {\n  state = {};\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n        <a className=\"navbar-brand\" href=\"#\">\n          LogMe\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item active\">\n              <a className=\"nav-link\" href=\"#\">\n                Home <span className=\"sr-only\">(current)</span>\n              </a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport Sidebar from \"../sidebar/sidebar\";\nimport MainContainer from \"./main-container-admin-dashboard\";\n\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nclass AdminDashboard extends Component {\n  state = {};\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-md-2 padding-none\">\n              <Sidebar />\n            </div>\n            <div className=\"col-md-10 main-container\">\n              <Route path=\"/main\" Component={MainContainer} />\n            </div>\n          </div>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default AdminDashboard;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass Discover extends Component {\n  constructor(props) {\n    super(props);\n    this.onUpdateSearch = this.onUpdateSearch.bind(this);\n    this.state = {\n      hits: []\n    };\n  }\n\n  onUpdateSearch(event) {\n    let value = event.target.value;\n    let apiURL = \"http://localhost:9200/logsindex/_search?q=\" + value;\n    axios.get(apiURL).then(response => {\n      let hits = response.data.hits.hits;\n      console.log(response.data);\n      console.log(hits);\n      if (hits) {\n        this.setState({ hits: hits, hitsCount: hits.length });\n      }\n    });\n  }\n  render() {\n    return (\n      <div className=\"main-admin-container container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-12 stat-section\">\n            <h3 className=\"text-left\">Discover</h3>\n            <br />\n\n            <div class=\"form-group\">\n              <input\n                name=\"search\"\n                placeholder=\"Search Now\"\n                onChange={this.onUpdateSearch}\n                type=\"text\"\n                className=\"form-control\"\n              />\n            </div>\n\n            <br />\n            <br />\n            <p>{this.state.hitsCount} Hits</p>\n            <table className=\"table \">\n              <thead className=\"thead-dark\">\n                <tr>\n                  <th>Timestamp</th>\n                  <th>Client</th>\n                  <th>Agent</th>\n                  <th>Method</th>\n                  <th>URL</th>\n                  <th>Response Code</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.hits.map((item, key) => (\n                  <tr className=\"animated bounceInUp\" key={item._id}>\n                    <td>{item._source.timestamp}</td>\n                    <td>{item._source.client}</td>\n                    <td className=\"word-break\">{item._source.agent}</td>\n                    <td>{item._source.method}</td>\n                    <td className=\"word-break\">{item._source.url}</td>\n                    <td>{item._source.request}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>{\" \"}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Discover;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport Switch from \"react-switch\";\n\nclass AlertSystem extends Component {\n  state = {\n    submitOK: true,\n    formErrors: [],\n    fieldTypesList: [\n      {\n        fieldTypeName: \"Route Type\",\n        fieldTypeValue: \"type\",\n        fieldNames: [\n          { fieldName: \"Booking\", fieldValue: \"booking\" },\n          { fieldName: \"Schedule\", fieldValue: \"schedule\" },\n          { fieldName: \"Tickets\", fieldValue: \"tickets\" }\n        ]\n      },\n      {\n        fieldTypeName: \"Action Type\",\n        fieldTypeValue: \"actionType\",\n        fieldNames: [\n          { fieldName: \"Route\", fieldValue: \"route\" },\n          { fieldName: \"PNR Status\", fieldValue: \"pnrStatus\" },\n          { fieldName: \"Check In\", fieldValue: \"checkIn\" },\n          { fieldName: \"Customer Support\", fieldValue: \"customerSupport\" },\n          { fieldName: \"Baggages\", fieldValue: \"baggages\" },\n          { fieldName: \"Domestic Airlines\", fieldValue: \"domesticAirlines\" },\n          {\n            fieldName: \"International Airlines\",\n            fieldValue: \"internationalAirlines\"\n          },\n          { fieldName: \"Domestic Airports\", fieldValue: \"domesticAirports\" },\n          {\n            fieldName: \"International Airports\",\n            fieldValue: \"internationalAirports\"\n          }\n        ]\n      },\n      {\n        fieldTypeName: \"Spider Bot\",\n        fieldTypeValue: \"spiderBot\",\n        fieldNames: [\n          { fieldName: \"Google Bot\", fieldValue: \"Googlebot\" },\n          { fieldName: \"Bingbot\", fieldValue: \"bingbot\" },\n          { fieldName: \"Duck Duck Bot\", fieldValue: \"DuckDuckBot\" },\n          { fieldName: \"Baiduspider\", fieldValue: \"Baiduspider\" },\n          { fieldName: \"YandexBot\", fieldValue: \"YandexBot\" },\n          { fieldName: \"Facebook Hit\", fieldValue: \"facebookexternalhit\" },\n          { fieldName: \"DotBot\", fieldValue: \"DotBot\" },\n          { fieldName: \"SemrushBot\", fieldValue: \"SemrushBot\" },\n          { fieldName: \"AhrefsBot\", fieldValue: \"AhrefsBot\" },\n          { fieldName: \"AdsBotGoogle\", fieldValue: \"AdsBotGoogle\" }\n        ]\n      }\n    ],\n    alertOperators: [\n      { operatorName: \"Greater Than\", operatorValue: \">\" },\n      { operatorName: \"Lesser Than\", operatorValue: \"<\" },\n      { operatorName: \"Equal\", operatorValue: \"==\" }\n    ],\n\n    alertRange: [\n      { rangeName: \"Second\", rangeMetric: \"seconds\" },\n      { rangeName: \"Minute\", rangeMetric: \"minutes\" },\n      { rangeName: \"Hour\", rangeMetric: \"hours\" },\n      { rangeName: \"Day\", rangeMetric: \"days\" },\n      { rangeName: \"Month\", rangeMetric: \"months\" },\n      { rangeName: \"Year\", rangeMetric: \"Years\" }\n    ],\n\n    fieldNames: [],\n    newAlert: {\n      alertEmailAddressArray: [{ email: \"logs@codingmart.com\" }],\n      alertMobileNumberArray: [{ mobile: \"\" }],\n      alertMobileNumberFlag: true,\n      alertName: \"\",\n      alertFrequency: \"1000\",\n      alertFieldType: \"type\",\n      alertFieldName: \"booking\",\n      alertOperator: \">\",\n      alertThresholdLimit: \"\",\n      alertRangeValue: \"5\",\n      alertRangeMetric: \"seconds\",\n      alertState: true\n    },\n    alertRules: []\n  };\n\n  componentDidMount() {\n    this.getAlertRules();\n    this.setFieldNames();\n  }\n\n  setFieldNames() {\n    const event = {\n      target: {\n        value: \"type\"\n      }\n    };\n    this.handleFieldTypeChange(event);\n  }\n\n  handleFieldTypeChange(event) {\n    console.log(event.target.value);\n    const fieldTypeValue = event.target.value;\n    const fieldTypeObj = this.state.fieldTypesList.find(\n      x => x.fieldTypeValue === fieldTypeValue\n    );\n    this.setState({\n      newAlert: { ...this.state.newAlert, alertFieldType: fieldTypeValue },\n      fieldNames: fieldTypeObj.fieldNames\n    });\n    setTimeout(() => {\n      console.log(this.state.fieldNames);\n    });\n  }\n\n  handleChange = event => {\n    let { newAlert } = this.state;\n    newAlert[event.target.name] = event.target.value;\n    this.setState({ newAlert });\n    console.log(this.state.newAlert);\n  };\n\n  handleShareholderNameChange = idx => evt => {\n    const alertEmailAddressArray = this.state.newAlert.alertEmailAddressArray.map(\n      (shareholder, sidx) => {\n        if (idx !== sidx) return shareholder;\n        return { ...shareholder, email: evt.target.value };\n      }\n    );\n    this.setState({\n      newAlert: {\n        ...this.state.newAlert,\n        alertEmailAddressArray: alertEmailAddressArray\n      }\n    });\n  };\n\n  handleAddShareholder() {\n    const alertEmailAddressArray = this.state.newAlert.alertEmailAddressArray.concat(\n      [{ email: \"\" }]\n    );\n    console.log(alertEmailAddressArray);\n    this.setState({\n      newAlert: {\n        ...this.state.newAlert,\n        alertEmailAddressArray: alertEmailAddressArray\n      }\n    });\n  }\n\n  handleRemoveShareholder = idx => () => {\n    const alertEmailAddressArray = this.state.newAlert.alertEmailAddressArray.filter(\n      (s, sidx) => idx !== sidx\n    );\n    this.setState({\n      newAlert: {\n        ...this.state.newAlert,\n        alertEmailAddressArray: alertEmailAddressArray\n      }\n    });\n  };\n\n  handleMobileNumberFlag(flag) {\n    console.log(flag);\n    if (!flag) {\n      this.setState({\n        newAlert: {\n          ...this.state.newAlert,\n          alertMobileNumberFlag: false\n        }\n      });\n    } else {\n      this.setState({\n        newAlert: {\n          ...this.state.newAlert,\n          alertMobileNumberFlag: true\n        }\n      });\n    }\n  }\n\n  handleShareholderNameChangeNumber = idx => evt => {\n    const alertMobileNumberArray = this.state.newAlert.alertMobileNumberArray.map(\n      (shareholder, sidx) => {\n        if (idx !== sidx) return shareholder;\n        return { ...shareholder, mobile: evt.target.value };\n      }\n    );\n    this.setState({\n      newAlert: {\n        ...this.state.newAlert,\n        alertMobileNumberArray: alertMobileNumberArray\n      }\n    });\n  };\n\n  handleAddShareholderNumber() {\n    const alertMobileNumberArray = this.state.newAlert.alertMobileNumberArray.concat(\n      [{ mobile: \"\" }]\n    );\n    console.log(alertMobileNumberArray);\n    this.setState({\n      newAlert: {\n        ...this.state.newAlert,\n        alertMobileNumberArray: alertMobileNumberArray\n      }\n    });\n  }\n\n  handleRemoveShareholderNumber = idx => () => {\n    const alertMobileNumberArray = this.state.newAlert.alertMobileNumberArray.filter(\n      (s, sidx) => idx !== sidx\n    );\n    this.setState({\n      newAlert: {\n        ...this.state.newAlert,\n        alertMobileNumberArray: alertMobileNumberArray\n      }\n    });\n  };\n\n  getAlertRules() {\n    axios.get(\"/get-alert-rules\").then(response => {\n      const alertRules = response.data.alertRules;\n      console.log(alertRules);\n      this.setState({ alertRules: alertRules });\n    });\n  }\n\n  formValidation = () => {\n    console.log(\"Form Validation\");\n    var alertName = this.state.newAlert.alertName;\n    var threshold = this.state.newAlert.alertThresholdLimit;\n    var mobile = this.state.newAlert.alertMobileNumberArray;\n    var range = this.state.newAlert.alertRangeValue;\n    let { formErrors } = this.state;\n    if (alertName == \"\") {\n      formErrors.push(\"Enter the Name of the Alert\");\n      this.setState({ formErrors });\n      this.setState({ submitOK: false });\n    }\n    if (threshold == \"\") {\n      formErrors.push(\"Enter the Threshold Value\");\n      this.setState({ formErrors });\n      this.setState({ submitOK: false });\n    }\n    if (range == \"\") {\n      formErrors.push(\"Enter the Range Value\");\n      this.setState({ formErrors });\n      this.setState({ submitOK: false });\n    }\n    if (this.state.newAlert.alertMobileNumberFlag)\n      mobile.forEach(element => {\n        console.log(element.mobile);\n        if (\n          isNaN(element.mobile) ||\n          element.mobile < 1000000000 ||\n          element.mobile > 9999999999\n        ) {\n          formErrors.push(\"Mobile Number is Not Valid\");\n          this.setState({ formErrors });\n          this.setState({ submitOK: false });\n        }\n      });\n    setTimeout(() => {\n      console.log(this.state.submitOK);\n      console.log(this.state.formErrors);\n    }, 1000);\n  };\n\n  addNewAlert() {\n    let { formErrors } = this.state;\n    formErrors.splice(0, formErrors.length);\n    this.setState({ submitOK: true, formErrors });\n    console.log(this.state.formErrors);\n    this.formValidation();\n\n    console.log(this.state.newAlert);\n    const alertFrequency = this.state.newAlert.alertFrequency;\n    const alertRangeValue = this.state.newAlert.alertRangeValue;\n    this.setState({\n      newAlert: {\n        ...this.state.newAlert,\n        alertFrequency: parseInt(alertFrequency),\n        alertRangeValue: parseInt(alertRangeValue),\n        alertState: true\n      }\n    });\n\n    setTimeout(() => {\n      if (this.state.submitOK) {\n        axios.post(\"/add-alert-rules\", this.state.newAlert).then(response => {\n          console.log(response.data);\n          this.getAlertRules();\n          this.clearFields();\n          Swal.fire(\n            \"Job Added Succesfully\",\n            \"Your job has been started\",\n            \"success\"\n          );\n          // this.alertToast();\n        });\n      }\n    }, 1000);\n  }\n\n  clearFields() {\n    this.setState({\n      newAlert: {\n        alertEmailAddressArray: [{ email: \"logs@codingmart.com\" }],\n        alertName: \"\",\n        alertFrequency: \"\",\n        alertFieldType: \"\",\n        alertFieldName: \"\",\n        alertOperator: \"\",\n        alertThresholdLimit: \"\",\n        alertState: true,\n        alertMobileNumberArray: [{ mobile: \"\" }]\n      }\n    });\n  }\n\n  updateAlertState(alert) {\n    console.log(alert.alertName);\n    let obj = { alertUid: alert.alertUid, alertState: alert.alertState };\n    axios.post(\"/update-alert-state\", obj).then(response => {\n      console.log(response.data);\n      this.getAlertRules();\n    });\n    console.log(obj);\n  }\n\n  deleteAlertState(alert) {\n    let obj = { alertUid: alert.alertUid };\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"You won't be able to revert this!\",\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\"\n    }).then(result => {\n      if (result.value) {\n        axios.post(\"/delete-alert-state\", obj).then(response => {\n          console.log(response.data);\n          Swal.fire(\"Deleted!\", \"Job has been deleted.\", \"success\");\n          this.getAlertRules();\n        });\n        console.log(obj);\n      }\n    });\n    console.log(alert.alertName);\n  }\n\n  render() {\n    return (\n      <div className=\"stat-section\">\n        <h5 className=\"text-left\">Alert System</h5>\n        <br />\n        <div className=\"alert-section\">\n          <h6>Alert Jobs</h6>\n          <br />\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div class=\"table-responsive\">\n                <table class=\"table\">\n                  <thead class=\"thead-dark\">\n                    <tr>\n                      <th scope=\"col\">#</th>\n                      <th scope=\"col\">Name</th>\n                      <th scope=\"col\">Field Name</th>\n                      <th scope=\"col\">Operator</th>\n                      <th scope=\"col\">Threshold</th>\n                      <th scope=\"col\">Frequency</th>\n                      <th scope=\"col\">State</th>\n                      <th scope=\"col\">Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {this.state.alertRules.map((alert, idx) => (\n                      <tr>\n                        <td>{idx + 1}</td>\n                        <td>{alert.alertName}</td>\n                        <td>{alert.alertFieldName}</td>\n                        <td>{alert.alertOperator}</td>\n                        <td>{alert.alertThresholdLimit}</td>\n                        <td>{alert.alertFrequency}</td>\n                        <td>\n                          <button\n                            type=\"button\"\n                            onClick={() => this.updateAlertState(alert)}\n                            className={\n                              \"btn margin-right \" +\n                              (alert.alertState\n                                ? \" btn-success\"\n                                : \"btn-warning\")\n                            }\n                          >\n                            {alert.alertState ? \"Active\" : \"Not Active\"}\n                          </button>\n                        </td>\n                        <td>\n                          <button\n                            type=\"button\"\n                            onClick={() => this.deleteAlertState(alert)}\n                            className=\"btn margin-right btn-danger\"\n                          >\n                            Delete Job\n                          </button>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n        <br />\n        <div className=\"alert-section\">\n          <h6>Add a New Alert System</h6>\n          <br />\n          <div className=\"row\">\n            <div className=\"form-group row col-6\">\n              <label for=\"logsThresholdLimit\" className=\"col-6 col-form-label\">\n                Name of the Alert System\n              </label>\n              <div class=\"col-6\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"logsThresholdLimit\"\n                  placeholder=\"Name of the Alert System\"\n                  name=\"alertName\"\n                  value={this.state.newAlert.alertName}\n                  onChange={event => this.handleChange(event)}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group row col-6\">\n              <label for=\"logsThresholdLimit\" className=\"col-6 col-form-label\">\n                Frequency\n              </label>\n              <div class=\"col-6\">\n                <select\n                  value=\"5\"\n                  name=\"alertFrequency\"\n                  value={this.state.newAlert.alertFrequency}\n                  onChange={event => this.handleChange(event)}\n                  class=\"custom-select\"\n                >\n                  <option value=\"1000\">Every Second</option>\n                  <option value=\"300000\">5 Minutes</option>\n                  <option value=\"1800000\">30 Minutes</option>\n                  <option value=\"3600000\">1 Hour</option>\n                  <option value=\"86400000\">1 Day</option>\n                </select>\n              </div>\n            </div>\n            <div className=\"col-md-12 alert-box\">\n              <hr />\n              <h6 className=\"text-left\">Match the Following Condition</h6>\n              <br />\n              <div className=\"row text-left\">\n                <div className=\"col-6\">\n                  <div class=\"form-group\">\n                    <label for=\"formGroupExampleInput\">Select Field Type</label>\n                    <select\n                      value={this.state.newAlert.alertFieldType}\n                      onChange={event => this.handleFieldTypeChange(event)}\n                      class=\"custom-select\"\n                    >\n                      {this.state.fieldTypesList.map(field => (\n                        <option value={field.fieldTypeValue}>\n                          {field.fieldTypeName}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n                <br />\n                <div className=\"col-6\">\n                  <div class=\"form-group\">\n                    <label for=\"formGroupExampleInput\">Select Field Name</label>\n                    <select\n                      value=\"5\"\n                      class=\"custom-select\"\n                      name=\"alertFieldName\"\n                      value={this.state.newAlert.alertFieldName}\n                      onChange={event => this.handleChange(event)}\n                    >\n                      {this.state.fieldNames.map(field => (\n                        <option value={field.fieldValue}>\n                          {field.fieldName}\n                        </option>\n                      ))}\n                      event\n                    </select>\n                  </div>\n                </div>\n\n                <div className=\"col-4\">\n                  <div class=\"form-group\">\n                    <label for=\"formGroupExampleInput\">Compare</label>\n                    <select\n                      value=\"5\"\n                      class=\"custom-select\"\n                      name=\"alertOperator\"\n                      value={this.state.newAlert.alertOperator}\n                      onChange={event => this.handleChange(event)}\n                    >\n                      {this.state.alertOperators.map(operator => (\n                        <option value={operator.operatorValue}>\n                          {operator.operatorName}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n\n                <div className=\"col-4\">\n                  <div class=\"form-group\">\n                    <label for=\"formGroupExampleInput\">Threshold Value</label>\n                    <input\n                      type=\"number\"\n                      className=\"form-control\"\n                      id=\"logsThresholdLimit\"\n                      name=\"alertThresholdLimit\"\n                      value={this.state.newAlert.alertThresholdLimit}\n                      onChange={event => this.handleChange(event)}\n                      placeholder=\"Threshold Value\"\n\n                      //   onChange={event => this.logsThresholdCountInput(event)}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"col-4\">\n                  <label for=\"formGroupExampleInput\">\n                    Range (i.e Last 5 Minutes)\n                  </label>\n                  <div className=\"row\">\n                    <input\n                      type=\"number\"\n                      className=\"form-control col-6\"\n                      id=\"logsThresholdLimit\"\n                      placeholder=\"Value\"\n                      name=\"alertRangeValue\"\n                      value={this.state.newAlert.alertRangeValue}\n                      onChange={event => this.handleChange(event)}\n                    />\n                    <div className=\"col-6\">\n                      <select\n                        value=\"5\"\n                        name=\"alertRangeMetric\"\n                        value={this.state.newAlert.alertRangeMetric}\n                        onChange={event => this.handleChange(event)}\n                        class=\"custom-select\"\n                      >\n                        {this.state.alertRange.map(range => (\n                          <option value={range.rangeMetric}>\n                            {range.rangeName}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Alert Email Address Box */}\n            <div className=\"col-md-12 alert-box\">\n              <hr />\n              <h6 className=\"text-left\">Alert Notifications</h6>\n              <br />\n              <div className=\"form-group row text-left\">\n                <label for=\"emailAddress\" className=\"col-4 col-form-label\">\n                  Email Addresss\n                </label>\n                <div class=\"col-8\">\n                  {this.state.newAlert.alertEmailAddressArray.map(\n                    (emailAddress, idx) => (\n                      <div className=\"d-flex flex-row align-items-center\">\n                        <input\n                          type=\"text\"\n                          placeholder={`Enter #${idx + 1} Email Address`}\n                          value={emailAddress.email}\n                          onChange={this.handleShareholderNameChange(idx)}\n                          className=\"form-control\"\n                          id=\"emailAddress\"\n                        />\n                        <button\n                          type=\"button\"\n                          onClick={this.handleRemoveShareholder(idx)}\n                          className=\"btn-danger btn margin-left\"\n                        >\n                          -\n                        </button>\n                        <br /> <br />\n                      </div>\n                    )\n                  )}\n                  <br />\n                  <button\n                    type=\"button\"\n                    onClick={() => this.handleAddShareholder()}\n                    className=\"btn-primary btn\"\n                  >\n                    Add New Email Address\n                  </button>\n                </div>\n              </div>\n\n              <hr />\n              <br />\n\n              <div className=\"form-group row text-left\">\n                <div className=\"col-4\">\n                  <label for=\"mobileNumber\" className=\"col-form-label\">\n                    Mobile Number\n                  </label>\n                  <br />\n                  <Switch\n                    onChange={event => this.handleMobileNumberFlag(event)}\n                    name=\"alertMobileNumberFlag\"\n                    checked={this.state.newAlert.alertMobileNumberFlag}\n                    id=\"normal-switch\"\n                  />\n                </div>\n\n                <div\n                  style={\n                    this.state.newAlert.alertMobileNumberFlag\n                      ? {}\n                      : { display: \"none\" }\n                  }\n                  class=\"col-8\"\n                >\n                  {this.state.newAlert.alertMobileNumberArray.map(\n                    (mobileNumber, idx) => (\n                      <div className=\"d-flex flex-row align-items-center\">\n                        <input\n                          type=\"number\"\n                          placeholder={`Enter #${idx + 1} Mobile Number`}\n                          value={mobileNumber.mobile}\n                          onChange={this.handleShareholderNameChangeNumber(idx)}\n                          className=\"form-control\"\n                          id=\"mobileNumber\"\n                        />\n                        <button\n                          type=\"button\"\n                          onClick={this.handleRemoveShareholderNumber(idx)}\n                          className=\"btn-danger btn margin-left\"\n                        >\n                          -\n                        </button>\n                        <br /> <br />\n                      </div>\n                    )\n                  )}\n                  <br />\n                  <button\n                    type=\"button\"\n                    onClick={() => this.handleAddShareholderNumber()}\n                    className=\"btn-primary btn\"\n                  >\n                    Add New Mobile Number\n                  </button>\n                </div>\n              </div>\n            </div>\n            <hr />\n\n            <div className=\"text-center col-md-12\">\n              <div\n                style={\n                  this.state.formErrors.length > 0 ? {} : { display: \"none\" }\n                }\n                className=\"form-errors-box\"\n              >\n                {this.state.formErrors.map(error => (\n                  <p>{error}</p>\n                ))}\n              </div>\n              <button\n                type=\"button\"\n                onClick={() => this.addNewAlert()}\n                className=\"btn btn-primary update-btn bg-grey \"\n              >\n                Add New Alert\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AlertSystem;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport AlertSystem from \"./components/alert-system\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nclass Settings extends Component {\n  state = { alertEmailAddressArray: [{ email: \"logs@codingmart.com\" }] };\n  constructor() {\n    super();\n    this.getSettingsData();\n  }\n\n  alertEmailAddressInput(event) {\n    this.setState({ alertEmailAddress: event.target.value });\n  }\n\n  logsThresholdCountInput(event) {\n    this.setState({ logsThresholdCount: parseInt(event.target.value) });\n  }\n\n  updateSettings() {\n    console.log(this.state);\n    axios\n      .post(\"http://localhost:3300/update-settings\", this.state)\n      .then(response => {\n        console.log(response);\n        this.alertToast();\n      });\n  }\n\n  alertToast() {\n    console.log(\"Alerting Toast\");\n    toast.success(\"🦄 Settings Updated\", {\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true\n    });\n  }\n\n  getSettingsData() {\n    axios.get(\"http://localhost:3300/settings\").then(response => {\n      console.log(response.data);\n      let obj = response.data;\n      console.log(obj);\n      this.setState(obj);\n    });\n  }\n\n  handleShareholderNameChange = idx => evt => {\n    const alertEmailAddressArray = this.state.alertEmailAddressArray.map(\n      (shareholder, sidx) => {\n        if (idx !== sidx) return shareholder;\n        return { ...shareholder, email: evt.target.value };\n      }\n    );\n    this.setState({ alertEmailAddressArray: alertEmailAddressArray });\n  };\n\n  handleAddShareholder() {\n    const alertEmailAddressArray = this.state.alertEmailAddressArray.concat([\n      { email: \"\" }\n    ]);\n    console.log(alertEmailAddressArray);\n    this.setState({\n      alertEmailAddressArray: alertEmailAddressArray\n    });\n  }\n\n  handleRemoveShareholder = idx => () => {\n    this.setState({\n      alertEmailAddressArray: this.state.alertEmailAddressArray.filter(\n        (s, sidx) => idx !== sidx\n      )\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"main-admin-container container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-12 stat-section\">\n            <h3 className=\"text-left\">Settings</h3>\n            {/* <hr />\n            <h5 className=\"text-left\">Logs Alert System</h5>\n            <div className=\"settings-box \">\n              <br />\n              <div className=\"form-group row\">\n                <label\n                  for=\"logsThresholdLimit\"\n                  className=\"col-4 col-form-label\"\n                >\n                  Logs Threshold Limit\n                </label>\n                <div class=\"col-8\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"logsThresholdLimit\"\n                    value={\n                      this.state.logsThresholdCount\n                        ? this.state.logsThresholdCount\n                        : 200\n                    }\n                    onChange={event => this.logsThresholdCountInput(event)}\n                  />\n                </div>\n              </div>\n\n              <div className=\"form-group row\">\n                <label for=\"emailAddress\" className=\"col-4 col-form-label\">\n                  Email Addresss\n                </label>\n                <div class=\"col-8\">\n                  {this.state.alertEmailAddressArray.map(\n                    (emailAddress, idx) => (\n                      <div className=\"d-flex flex-row align-items-center\">\n                        <input\n                          type=\"text\"\n                          placeholder={`Enter #${idx + 1} Email Address`}\n                          value={emailAddress.email}\n                          onChange={this.handleShareholderNameChange(idx)}\n                          className=\"form-control\"\n                          id=\"emailAddress\"\n                        />\n                        <button\n                          type=\"button\"\n                          onClick={this.handleRemoveShareholder(idx)}\n                          className=\"btn-danger btn margin-left\"\n                        >\n                          -\n                        </button>\n                        <br /> <br />\n                      </div>\n                    )\n                  )}\n                  <br />\n                  <button\n                    type=\"button\"\n                    onClick={() => this.handleAddShareholder()}\n                    className=\"btn-primary btn\"\n                  >\n                    Add New Email Address\n                  </button>\n                </div>\n              </div>\n\n              <button\n                type=\"button\"\n                onClick={() => this.updateSettings()}\n                className=\"btn btn-primary update-btn bg-grey \"\n              >\n                Update Settings\n              </button>\n            </div>\n\n            <hr /> */}\n\n            <AlertSystem />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Settings;\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport AdminDashboard from \"./components/admin-dashboard/admin-dashboard\";\nimport Navbar from \"./components/navbar/navbar\";\nimport \"react-dates/initialize\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Sidebar from \"./components/sidebar/sidebar\";\nimport MainContainer from \"./components/admin-dashboard/main-container-admin-dashboard\";\nimport Discover from \"./components/admin-dashboard/discover-page\";\nimport Settings from \"./components/admin-dashboard/settings-page\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport socketIOClient from \"socket.io-client\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.state = {\n      response: false,\n      endpoint: \"http://127.0.0.1:4001\"\n    };\n    // this.initSocketIO();\n  }\n\n  initSocketIO() {\n    const { endpoint } = this.state;\n    const socket = socketIOClient(endpoint);\n    socket.on(\"alertThresholdLimit\", data => {\n      console.log(data);\n      this.alertToast();\n    });\n  }\n\n  alertToast() {\n    console.log(\"Alerting Toast\");\n    toast.warn(\"🦄 Log Threshold Limit Alert!\", {\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true\n    });\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar />\n        <BrowserRouter>\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-md-2 padding-none\">\n                <Sidebar />\n              </div>\n              <div className=\"col-md-10 main-container\">\n                <Switch>\n                  <Route exact path=\"/admin\" component={MainContainer} />\n                  <Route exact path=\"/discover\" component={Discover} />\n                  <Route exact path=\"/settings\" component={Settings} />\n                  <Route path=\"/\" component={MainContainer} />\n                </Switch>\n                <ToastContainer />\n              </div>\n            </div>\n          </div>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"react-dates/lib/css/_datepicker.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}